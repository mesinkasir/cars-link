import { PlatePlugin } from '../types/PlatePlugin/PlatePlugin';
import { WithOverride } from '../types/PlatePlugin/WithOverride';
import { PlatePluginComponent, PlatePluginOptions, PluginKey } from '../types/PlatePluginOptions/PlateOptions';
export interface WithPlateOptions {
    id?: string | null;
    plugins?: PlatePlugin[];
    options?: Record<PluginKey, Partial<PlatePluginOptions>>;
    components?: Record<string, PlatePluginComponent>;
}
/**
 * Apply `withInlineVoid` and all plate plugins `withOverrides`.
 * Overrides:
 * - `id`: id of the editor.
 * - `key`: random key for the <Slate> component so each time the editor is created, the component resets.
 * - `options`: Plate options
 */
export declare const withPlate: ({ id, plugins, options, components, }?: WithPlateOptions) => WithOverride;
//# sourceMappingURL=withPlate.d.ts.map