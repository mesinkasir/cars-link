{"version":3,"file":"index.js","sources":["../src/combobox.store.ts","../src/utils/getTextFromTrigger.ts","../src/onChangeCombobox.ts","../src/utils/getNextNonDisabledIndex.ts","../src/utils/getNextWrappingIndex.ts","../src/onKeyDownCombobox.ts","../src/createComboboxPlugin.ts","../src/hooks/useComboboxControls.ts"],"sourcesContent":["import { createStore, StateActions, StoreApi } from '@udecode/zustood';\nimport { Range } from 'slate';\nimport { ComboboxOnSelectItem, NoData, TComboboxItem } from './types';\n\nexport type ComboboxStateById<TData = NoData> = {\n  /**\n   * Combobox id.\n   */\n  id: string;\n\n  /**\n   * Items filter function by text.\n   * @default (value) => value.text.toLowerCase().startsWith(search.toLowerCase())\n   */\n  filter?: (search: string) => (item: TComboboxItem<TData>) => boolean;\n\n  /**\n   * Max number of items.\n   * @default items.length\n   */\n  maxSuggestions?: number;\n\n  /**\n   * Trigger that activates the combobox.\n   */\n  trigger: string;\n\n  /**\n   * Regular expression for search, for example to allow whitespace\n   */\n  searchPattern?: string;\n\n  /**\n   * Called when an item is selected.\n   */\n  onSelectItem: ComboboxOnSelectItem<TData> | null;\n\n  /**\n   * Is opening/closing the combobox controlled by the client.\n   */\n  controlled?: boolean;\n};\n\nexport type ComboboxStoreById<TData = NoData> = StoreApi<\n  string,\n  ComboboxStateById<TData>,\n  StateActions<ComboboxStateById<TData>>\n>;\n\nexport type ComboboxState<TData = NoData> = {\n  /**\n   * Active id (combobox id which is opened).\n   */\n  activeId: string | null;\n\n  /**\n   * Object whose keys are combobox ids and values are config stores\n   * (e.g. one for tag, one for mention,...).\n   */\n  byId: Record<string, ComboboxStoreById>;\n\n  /**\n   * Unfiltered items.\n   */\n  items: TComboboxItem<TData>[];\n\n  /**\n   * Filtered items\n   */\n  filteredItems: TComboboxItem<TData>[];\n\n  /**\n   * Highlighted index.\n   */\n  highlightedIndex: number;\n\n  /**\n   * Parent element of the popper element (the one that has the scroll).\n   * @default document\n   */\n  popperContainer?: Document | HTMLElement;\n\n  /**\n   * Overrides `usePopper` options.\n   */\n  popperOptions?: any;\n\n  /**\n   * Range from the trigger to the cursor.\n   */\n  targetRange: Range | null;\n\n  /**\n   * Text after the trigger.\n   */\n  text: string | null;\n};\n\nconst createComboboxStore = (state: ComboboxStateById) =>\n  createStore(`combobox-${state.id}`)(state);\n\nexport const comboboxStore = createStore('combobox')<ComboboxState>({\n  activeId: null,\n  byId: {},\n  highlightedIndex: 0,\n  items: [],\n  filteredItems: [],\n  targetRange: null,\n  text: null,\n})\n  .extendActions((set, get) => ({\n    setComboboxById: <TData = NoData>(state: ComboboxStateById<TData>) => {\n      if (get.byId()[state.id]) return;\n\n      set.state((draft) => {\n        draft.byId[state.id] = createComboboxStore(\n          (state as unknown) as ComboboxStateById\n        );\n      });\n    },\n    open: (state: Pick<ComboboxState, 'activeId' | 'targetRange' | 'text'>) => {\n      set.mergeState(state);\n    },\n    reset: () => {\n      set.state((draft) => {\n        draft.activeId = null;\n        draft.highlightedIndex = 0;\n        draft.items = [];\n        draft.text = null;\n        draft.targetRange = null;\n      });\n    },\n  }))\n  .extendSelectors((state) => ({\n    isOpen: () => !!state.activeId,\n  }));\n\nexport const useComboboxSelectors = comboboxStore.use;\nexport const comboboxSelectors = comboboxStore.get;\nexport const comboboxActions = comboboxStore.set;\n\nexport const getComboboxStoreById = (id: string | null) =>\n  id ? comboboxSelectors.byId()[id] : null;\n\nexport const useActiveComboboxStore = () => {\n  const activeId = useComboboxSelectors.activeId();\n  const comboboxes = useComboboxSelectors.byId();\n\n  return activeId ? comboboxes[activeId] : null;\n};\n","import { escapeRegExp, getText } from '@udecode/plate-core';\nimport { Editor, Point } from 'slate';\n\n/**\n * Get text and range from trigger to cursor.\n * Starts with trigger and ends with non-whitespace character.\n */\nexport const getTextFromTrigger = (\n  editor: Editor,\n  {\n    at,\n    trigger,\n    searchPattern = `\\\\S+`,\n  }: { at: Point; trigger: string; searchPattern?: string }\n) => {\n  const escapedTrigger = escapeRegExp(trigger);\n  const triggerRegex = new RegExp(`(?:^|\\\\s)${escapedTrigger}`);\n\n  let start: Point | undefined = at;\n  let end: Point | undefined;\n\n  while (true) {\n    end = start;\n\n    if (!start) break;\n\n    start = Editor.before(editor, start);\n    const charRange = start && Editor.range(editor, start, end);\n    const charText = getText(editor, charRange);\n\n    if (!charText.match(searchPattern)) {\n      start = end;\n      break;\n    }\n  }\n\n  // Range from start to cursor\n  const range = start && Editor.range(editor, start, at);\n  const text = getText(editor, range);\n\n  if (!range || !text.match(triggerRegex)) return;\n\n  return {\n    range,\n    textAfterTrigger: text.substring(trigger.length),\n  };\n};\n\n// export const matchesTriggerAndPattern = (\n//   editor: TEditor,\n//   { at, trigger, pattern }: { at: Point; trigger: string; pattern: string }\n// ) => {\n//   // Point at the start of line\n//   const lineStart = Editor.before(editor, at, { unit: 'line' });\n//\n//   // Range from before to start\n//   const beforeRange = lineStart && Editor.range(editor, lineStart, at);\n//\n//   // Before text\n//   const beforeText = getText(editor, beforeRange);\n//\n//   // Starts with char and ends with word characters\n//   const escapedTrigger = escapeRegExp(trigger);\n//\n//   const beforeRegex = new RegExp(`(?:^|\\\\s)${escapedTrigger}(${pattern})$`);\n//\n//   // Match regex on before text\n//   const match = !!beforeText && beforeText.match(beforeRegex);\n//\n//   // Point at the start of mention\n//   const mentionStart = match\n//     ? Editor.before(editor, at, {\n//         unit: 'character',\n//         distance: match[1].length + trigger.length,\n//       })\n//     : null;\n//\n//   // Range from mention to start\n//   const mentionRange = mentionStart && Editor.range(editor, mentionStart, at);\n//\n//   return {\n//     range: mentionRange,\n//     match,\n//   };\n// };\n","import { isCollapsed, OnChange } from '@udecode/plate-core';\nimport { Range } from 'slate';\nimport { getTextFromTrigger } from './utils/getTextFromTrigger';\nimport { comboboxActions, comboboxSelectors } from './combobox.store';\n\n/**\n * For each combobox state (byId):\n * - if the selection is collapsed\n * - if the cursor follows the trigger\n * - if there is text without whitespaces after the trigger\n * - open the combobox: set id, search, targetRange in the store\n * Close the combobox if needed\n */\nexport const onChangeCombobox: OnChange = (editor) => () => {\n  const byId = comboboxSelectors.byId();\n  const activeId = comboboxSelectors.activeId();\n\n  let shouldClose = true;\n\n  for (const store of Object.values(byId)) {\n    const id = store.get.id();\n    const controlled = store.get.controlled?.();\n\n    if (controlled) {\n      // do not close controlled comboboxes\n      if (activeId === id) {\n        shouldClose = false;\n        break;\n      } else {\n        // do not open controlled comboboxes\n        continue;\n      }\n    }\n\n    const { selection } = editor;\n    if (!selection || !isCollapsed(selection)) {\n      continue;\n    }\n\n    const trigger = store.get.trigger();\n    const searchPattern = store.get.searchPattern?.();\n\n    const isCursorAfterTrigger = getTextFromTrigger(editor, {\n      at: Range.start(selection),\n      trigger,\n      searchPattern,\n    });\n    if (!isCursorAfterTrigger) {\n      continue;\n    }\n\n    const { range, textAfterTrigger } = isCursorAfterTrigger;\n\n    comboboxActions.open({\n      activeId: id,\n      text: textAfterTrigger,\n      targetRange: range,\n    });\n\n    shouldClose = false;\n    break;\n  }\n\n  if (shouldClose && comboboxSelectors.isOpen()) {\n    comboboxActions.reset();\n  }\n};\n","/**\n * Returns the next index in the list of an item that is not disabled.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index. Returns baseIndex if item is not disabled. Returns next non-disabled item otherwise. If no non-disabled found it will return -1.\n */\nexport const getNextNonDisabledIndex = (\n  moveAmount: number,\n  baseIndex: number,\n  itemCount: number,\n  getItemNodeFromIndex: any,\n  circular: boolean\n): number => {\n  const currentElementNode = getItemNodeFromIndex(baseIndex);\n  if (!currentElementNode || !currentElementNode.hasAttribute('disabled')) {\n    return baseIndex;\n  }\n\n  if (moveAmount > 0) {\n    for (let index = baseIndex + 1; index < itemCount; index++) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  } else {\n    for (let index = baseIndex - 1; index >= 0; index--) {\n      if (!getItemNodeFromIndex(index).hasAttribute('disabled')) {\n        return index;\n      }\n    }\n  }\n\n  if (circular) {\n    return moveAmount > 0\n      ? getNextNonDisabledIndex(1, 0, itemCount, getItemNodeFromIndex, false)\n      : getNextNonDisabledIndex(\n          -1,\n          itemCount - 1,\n          itemCount,\n          getItemNodeFromIndex,\n          false\n        );\n  }\n\n  return -1;\n};\n","import { getNextNonDisabledIndex } from './getNextNonDisabledIndex';\n\n/**\n * Returns the new index in the list, in a circular way. If next value is out of bonds from the total,\n * it will wrap to either 0 or itemCount - 1.\n *\n * @param {number} moveAmount Number of positions to move. Negative to move backwards, positive forwards.\n * @param {number} baseIndex The initial position to move from.\n * @param {number} itemCount The total number of items.\n * @param {Function} getItemNodeFromIndex Used to check if item is disabled.\n * @param {boolean} circular Specify if navigation is circular. Default is true.\n * @returns {number} The new index after the move.\n */\nexport const getNextWrappingIndex = (\n  moveAmount: number,\n  baseIndex: number,\n  itemCount: number,\n  getItemNodeFromIndex: any,\n  circular = true\n) => {\n  if (itemCount === 0) {\n    return -1;\n  }\n\n  const itemsLastIndex = itemCount - 1;\n\n  // noinspection SuspiciousTypeOfGuard\n  if (\n    typeof baseIndex !== 'number' ||\n    baseIndex < 0 ||\n    baseIndex >= itemCount\n  ) {\n    baseIndex = moveAmount > 0 ? -1 : itemsLastIndex + 1;\n  }\n\n  let newIndex = baseIndex + moveAmount;\n\n  if (newIndex < 0) {\n    newIndex = circular ? itemsLastIndex : 0;\n  } else if (newIndex > itemsLastIndex) {\n    newIndex = circular ? 0 : itemsLastIndex;\n  }\n\n  const nonDisabledNewIndex = getNextNonDisabledIndex(\n    moveAmount,\n    newIndex,\n    itemCount,\n    getItemNodeFromIndex,\n    circular\n  );\n\n  if (nonDisabledNewIndex === -1) {\n    return baseIndex >= itemCount ? -1 : baseIndex;\n  }\n\n  return nonDisabledNewIndex;\n};\n","import { KeyboardHandler } from '@udecode/plate-core';\nimport { getNextWrappingIndex } from './utils/getNextWrappingIndex';\nimport {\n  comboboxActions,\n  comboboxSelectors,\n  getComboboxStoreById,\n} from './combobox.store';\n\n/**\n * If the combobox is open, handle:\n * - down (next item)\n * - up (previous item)\n * - escape (reset combobox)\n * - tab, enter (select item)\n */\nexport const onKeyDownCombobox: KeyboardHandler = (editor) => (event) => {\n  const {\n    highlightedIndex,\n    filteredItems,\n    activeId,\n  } = comboboxSelectors.state();\n  const isOpen = comboboxSelectors.isOpen();\n\n  if (!isOpen) return;\n\n  const store = getComboboxStoreById(activeId);\n  if (!store) return;\n\n  const onSelectItem = store.get.onSelectItem();\n\n  if (event.key === 'ArrowDown') {\n    event.preventDefault();\n\n    const newIndex = getNextWrappingIndex(\n      1,\n      highlightedIndex,\n      filteredItems.length,\n      () => {},\n      true\n    );\n    comboboxActions.highlightedIndex(newIndex);\n    return;\n  }\n  if (event.key === 'ArrowUp') {\n    event.preventDefault();\n\n    const newIndex = getNextWrappingIndex(\n      -1,\n      highlightedIndex,\n      filteredItems.length,\n      () => {},\n      true\n    );\n    comboboxActions.highlightedIndex(newIndex);\n    return;\n  }\n  if (event.key === 'Escape') {\n    event.preventDefault();\n    comboboxActions.reset();\n    return;\n  }\n\n  if (['Tab', 'Enter'].includes(event.key)) {\n    event.preventDefault();\n    if (filteredItems[highlightedIndex]) {\n      onSelectItem?.(editor, filteredItems[highlightedIndex]);\n    }\n  }\n};\n","import { createPluginFactory } from '@udecode/plate-core';\nimport { onChangeCombobox } from './onChangeCombobox';\nimport { onKeyDownCombobox } from './onKeyDownCombobox';\n\nexport const KEY_COMBOBOX = 'combobox';\n\nexport const createComboboxPlugin = createPluginFactory({\n  key: KEY_COMBOBOX,\n  handlers: {\n    onChange: onChangeCombobox,\n    onKeyDown: onKeyDownCombobox,\n  },\n});\n","import { useMemo } from 'react';\nimport { useCombobox } from 'downshift';\nimport { useComboboxSelectors } from '../combobox.store';\n\nexport const useComboboxControls = () => {\n  const isOpen = useComboboxSelectors.isOpen();\n  const highlightedIndex = useComboboxSelectors.highlightedIndex();\n  const filteredItems = useComboboxSelectors.filteredItems();\n\n  const {\n    closeMenu,\n    getMenuProps,\n    getComboboxProps,\n    getInputProps,\n    getItemProps,\n  } = useCombobox({\n    isOpen,\n    highlightedIndex,\n    items: filteredItems,\n    circularNavigation: true,\n  });\n  getMenuProps({}, { suppressRefError: true });\n  getComboboxProps({}, { suppressRefError: true });\n  getInputProps({}, { suppressRefError: true });\n\n  return useMemo(\n    () => ({\n      closeMenu,\n      getMenuProps,\n      getItemProps,\n    }),\n    [closeMenu, getItemProps, getMenuProps]\n  );\n};\n"],"names":["createComboboxStore","state","createStore","id","comboboxStore","activeId","byId","highlightedIndex","items","filteredItems","targetRange","text","extendActions","set","get","setComboboxById","draft","open","mergeState","reset","extendSelectors","isOpen","useComboboxSelectors","use","comboboxSelectors","comboboxActions","getComboboxStoreById","useActiveComboboxStore","comboboxes","getTextFromTrigger","editor","at","trigger","searchPattern","escapedTrigger","escapeRegExp","triggerRegex","RegExp","start","end","Editor","before","charRange","range","charText","getText","match","textAfterTrigger","substring","length","onChangeCombobox","shouldClose","store","Object","values","controlled","selection","isCollapsed","isCursorAfterTrigger","Range","getNextNonDisabledIndex","moveAmount","baseIndex","itemCount","getItemNodeFromIndex","circular","currentElementNode","hasAttribute","index","getNextWrappingIndex","itemsLastIndex","newIndex","nonDisabledNewIndex","onKeyDownCombobox","event","onSelectItem","key","preventDefault","includes","KEY_COMBOBOX","createComboboxPlugin","createPluginFactory","handlers","onChange","onKeyDown","useComboboxControls","closeMenu","getMenuProps","getComboboxProps","getInputProps","getItemProps","useCombobox","circularNavigation","suppressRefError","useMemo"],"mappings":"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"}