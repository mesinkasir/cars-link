import { CSSProperties } from 'react';
import { OverrideProps, TElement, TText } from '@udecode/plate-core';
export interface GetOverridePropsOptions {
    pluginKey?: string;
    /**
     * Existing className.
     */
    className?: string;
    /**
     * Style value or className key.
     */
    element?: TElement;
    /**
     * Style value or className key.
     */
    text?: TText;
    /**
     * Existing style.
     */
    style?: CSSProperties;
}
export interface OverridePropsReturnType {
    className?: string;
    style?: CSSProperties;
}
/**
 * Util for `overrideProps`.
 * Return if `element`, `text`, `nodeKey` is defined.
 * Return if `node.type` is not in `validTypes` (if defined).
 * Return if `value = node[nodeKey]` is not in `validNodeValues` (if defined).
 * If `classNames[value]` is defined, override `className` with it.
 * If `styleKey` is defined, override `style` with `[styleKey]: value`.
 */
export declare const getOverrideProps: (pluginKey: string) => OverrideProps;
//# sourceMappingURL=getOverrideProps.d.ts.map