/**

Copyright 2021 Forestry.io Holdings, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

*/
import { InputRule } from 'prosemirror-inputrules';
import { MarkType, NodeType, Schema } from 'prosemirror-model';
export declare const STRONG: RegExp;
export declare const EM: RegExp;
export declare const S: RegExp;
export declare const EM_UNDERSCORE: RegExp;
export declare const CODE: RegExp;
export declare function buildInputRules(schema: Schema): any[];
export declare function strongStarRule(markType: MarkType): InputRule<any>;
export declare function strikethroughRule(markType: MarkType): InputRule<any>;
export declare function strongUnderRule(markType: MarkType): InputRule<any>;
export declare function emStarRule(markType: MarkType): InputRule<any>;
export declare function emUnderRule(markType: MarkType): InputRule<any>;
export declare function codeRule(markType: MarkType): InputRule<any>;
export declare function blockQuoteRule(nodeType: NodeType): InputRule<any>;
export declare function orderedListRule(nodeType: NodeType): InputRule<any>;
export declare function horizontalRuleRule(nodeType: NodeType): InputRule<any>;
export declare function bulletListRule(nodeType: NodeType): InputRule<any>;
export declare function codeBlockRule(nodeType: NodeType): InputRule<any>;
export declare function headingRule(nodeType: NodeType, maxLevel: number): InputRule<any>;
